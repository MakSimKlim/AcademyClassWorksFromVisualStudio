// 24_02_23 (указатели продолжение)
//
//
//Указатели - переменная которая содерж в себе адрес ячейки памяти
//
//  1)=====================================================================
//   #include <iostream>
//   #include <time.h>
//
//   using namespace std;
//
//
//   int main()
//   {
//
//   int* arrNoSort;
//   char* charPointer;
//   float* floatPointer;
// 
//   для компилятора нужно знать изначально тип данных, в том числе и для указателей+
// 
//   void* voidPointer; // универсальный указатель для всех видов данных
// 
//   компу проще находить нужный адрес (указатель) в памяти чем имя
// 
// 
//   int number1 = 11;
//   arrNoSort = &number1;//& скопировали значение ячейки в память, т.е. создали копию number1
//
//
//
//   return 0;
//   }
//
//    2)=================================================================
//   #include <iostream>
//   #include <time.h>
//
//   using namespace std;
//
//
//   int main()
//   {
//    setlocale(LC_ALL, "Rus");
//    srand(time(NULL));
//
//    int* pointer = nullptr;//объявление указателя по синтаксису, начальное значение равно 0
//    int number1 = 11, number2 = 22;
//
//    //получение адреса от переменной 1-й вариант
//    cout << &number1 << "\n";
//    cout << &number2 << "\n";
//
//    //получение адреса от переменной 2-й вариант записи
//    pointer = &number1;
//    cout << pointer << "\n";//ссылка на адрес ячейки от переменной
//    cout << *pointer << "\n"; //чтобы добраться до значения в этой ячейке, нужно разименовать указатель (добавить *)
//
//    pointer = &number2;
//    cout << pointer << "\n";//ссылка на адрес ячейки от переменной
//    cout << *pointer << "\n"; //чтобы добраться до значения в этой ячейке, нужно разименовать указатель (добавить *)
//
//   return 0;
//   }
// 
// 
// 
//  3)=================================================================

//
//   #include <iostream>
//   #include <time.h>
//
//   using namespace std;
//
//
//   int main()
//   {
//    setlocale(LC_ALL, "Rus");
//    srand(time(NULL));
//
//    int* pointer = nullptr;//объявление указателя по синтаксису, начальное значение равно 0
//    void* voidPointer = nullptr;
//    
//    int number1 = 11, number2 = 22;
//    float number3 = 3.14;
//
//    //получение адреса от переменной 1-й вариант
//    cout << &number1 << "\n";
//    cout << &number2 << "\n";
//
//    //получение адреса от переменной 2-й вариант записи
//    pointer = &number1;
//    cout << *pointer << "\n"; //чтобы добраться до значения в этой ячейке, нужно разименовать указатель (добавить *)
//
//    voidPointer = &number1;
//    printVoid1 = reinterpret_pointer_cast<int*>(&voidPointer);
//    cout << *voidPointer << "\n";
//
//    pointer = &number2;
//    cout << *pointer << "\n"; //чтобы добраться до значения в этой ячейке, нужно разименовать указатель (добавить *)
//
//
//    return 0;
//   }
//

// 4)===============================================================================================
//#include <iostream>
//#include <time.h>
//
//using namespace std;
//
//
//int main()
//{
//    setlocale(LC_ALL, "Rus");
//    srand(time(NULL));
//
//    int* pointer = nullptr;//объявление указателя по синтаксису, начальное значение равно 0
//    
//    int arrNumber[5] = { 31,54,77,52,93 };//arrNumber - это имя ячейки адреса
//
//    for (int i = 0; i < 5; i++)
//    {
//        cout << arrNumber << "\n";//выводится адрес ячейки памяти, а не значение
//        cout << *(arrNumber + i) << "\n";//без *( ... +i) будет выводится адрес ячейки памяти, а не значение
//    }
//
//
//    return 0;
//}




//  5)=== ссылка на ячейку памяти ===============================================================================

//   #include <iostream>
//   #include <time.h>
//
//   using namespace std;
//
//   void func(double&);//обращение по ссылке на ячейку
//
//   int main()
//   {
//    setlocale(LC_ALL, "Rus");
//    srand(time(NULL));
//
//    double var = 10.0;
//    cout << var << "\n";
//    func(var);
//    cout << var << "\n";
//
//
//    return 0;
//   }
//
//   void func(double& numb)
//  {
//    numb *= 2.54;
//  }





//  6)=== 5) вариант с указателями ==========================================================================

//#include <iostream>
//#include <time.h>
//
//using namespace std;
//
//void func(double*);//обращение по ссылке на ячейку динамической памяти ( указателем)
//
//int main()
//{
//    setlocale(LC_ALL, "Rus");
//    srand(time(NULL));
//
//    double var = 10.0;
//    cout << var << "\n";
//    func(&var);
//    cout << var << "\n";
//
//
//    return 0;
//}
//
//void func(double* numb)//указатель на double (в этом указателе может храниться double)
//{
//    *numb *= 2.54;//разименовали и умножаем на 2,54
//}
//// когда используем указатель, мы можем менять значения в ячейке памяти




//    7)  =======================================================================================