// 03_03_23_(передача в функцию через указатели)
//
//
//память в с++ состоит из стэка, кучи, (область глобальных переменных, область программ)
// указатель - локал объект автоматической памяти
// при объявлении массива выдел место в динамич памяти
//пока не удалим указатель  эта яч памяти висит
//указатели виды - в динамич памяти, в статич памяти (виден в мэйне, где он и объявляется), глобал объект (виден везде)
//если не сделан указатель на функцию, то по факту ее нет, пока ее не вызвали в мэйне, как только ее вызвали, выделяется память под функцию в динамической памяти (куче)
//динамическая память необх для работы с указателями, чтобы резервировать ячейки памяти. ее нужно освобождать после выполнения
//операторы new , delete - для выделения (но свободной от данных) и очистки памяти.
// объявление указателя: int* ptr;
// new нужен только под массивы, т.к он выделяет начальную точку памяти - начало какого-то диапазона (с этого диапазона начинай), а * конкретно ячейку
// смысл динамического массива - нужно знать размер до компиляции 
// с using namespace std; уже начинается компиляция
// при объявлении двумерного массива делается указатель на указатель ** (первый указатель на начальные ключи, а второй - на подмассивы "массивы массивовычи", а трехмерные "массив массивович массивов")
// в с++ можно пользоваться фишками из с и его старыми командами (вместо new, delete -- malloc, calloc)


//delete имя массива[значение индекса] - удаление памяти из подмассива
//delete[]имя массива - удаление памяти из массива
//сначала удаляется все из подмассивов, затем из массива обязательно
// если удалить только массив, то из подмассива не удаляются данные и забивают память!!!

//указатель - просто средство управления памяти (очень помогает при работе с массивами), т.к. в с++ нет сборщика мусора!!!


#include <iostream>
#include <time.h>

    using namespace std;

    void printDinamicArr(int** arr, int size)
    {
        for (int i = 0; i < size; i++)
        {

            for (int j = 0; j < size; j++)
            {
               cout << arr[i][j]<< "\n";//передача двумерного массива в функцию через указатели
             //  cout << *(arr +j) << "\n";//одинаково с записью выше
            }
            
        }
    }

    int main()
    {
        setlocale(LC_ALL, "Rus");
        srand(time(NULL));

        int counter = 0;

        int* ptr;

       

        cout << "Введите желаемое количество строк для заполнения массива" << "\n";

        cin >> counter;


        int** dinamicArr = new int* [counter];//new - выделяем место в динамической памяти, начало диапазона int
        int* arrPtr = new int[counter];
        int counter2 = 5;

        for (int i = 0; i < counter; i++)
        {
            dinamicArr[i] = new int[counter2];

            for (int j = 0; j < counter2; j++)
            {
                dinamicArr[i][j] = 1 + rand() % 9;
                cout << dinamicArr[i][j] << " ";
            }
            cout << "\n";
        }

        return 0;
    }

    
