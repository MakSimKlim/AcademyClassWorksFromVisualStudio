// Academy_01_02_23
//
//Массивы (для складывания данных только ОДНОГО типа в одно место)
//массив - это нумерованный список
//
//Куча и стэк - части оперативной памяти программы (куча -хаос, стэк - порядок)
// 
//какое место занимает массив в памяти?
// 
//в структуре могут лежать данные любого типа, а в массиве только одного типа
//
//Массивы: статический и динамический
//
//Метод "ВЕКТОР" в std позволяет добавлять элементы либо в начало либо в конец массива (пушить "push")
//
//Фабрика- класс, который изготавливает шаблоны экземпляров класса
//
//stl - стандартная библиотека шаблонов (встроена в язык как и std)
//
//


#include <iostream>

using namespace std;

const int N = 3;//позволяет быстро менять размерность массива при большом количестве массивов одинаковой размерности

int main()
{
	setlocale(LC_ALL, "Rus");

	//1). первый вариант записи массива
	//int arrays[N];//тип данных, название массива (может быть любым), [кол-во ключей массива] - можно задавать константой, можно сразу числом
	//arrays[0] = 3;// в [] указывается ключ массива, начиная с нуля по порядку
	//arrays[1] = 4;
	//arrays[2] = 5;
	//cout << arrays << "\n";//без ключа массив выдаст просто адресс в памяти
	//cout << arrays[0] << "\n";//обратились к ключу массива


	//2). Второй вариант записи массива
	//int arrays[N] = {3,4,6};
	//cout << arrays[1] << "\n"; //выведется первый элемент массива "4", т.к. отсчет начинается с нулевого!!! {0,1,2...}


	//3). Вариант записи массива через цикл (обход массива через цикл)
	int arrays[N] = { 3,4,6 };
	for (int i = 0; i < N; i++)//обход массива в цикле
	{
		cout << arrays[i] << "\n";//выведет по порядку значения ключей массива от 0 до 2: "3", "4", "6"
	}





	system("pause");

	return 0;
}
